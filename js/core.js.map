{"version":3,"sources":["main.js","patterns/dropdown/_dropdown.js"],"names":["initResponsiveNav","breakpoint","window","getComputedStyle","document","querySelector","content","navOpenBtn","menu","console","log","getAttribute","setAttribute","removeAttribute","addEventListener","toggleNav","removeEventListener","initPage","resizeThrottler","classList","add","remove","e","resizeTimeout","btnExpanded","closeNav","openNav","navMenu","target","parentElement","stopPropagation","setTimeout","readyState","launchDropdown","launcher","container","blur","closeDropdowns","openMenus","openLaunchers","querySelectorAll","i","focus","hideMenu","thisMenu","dropdowns"],"mappings":"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","file":"core.js","sourcesContent":["(() => {\n  'use strict';\n\n  function initResponsiveNav() {\n    const breakpoint = window.getComputedStyle(document.querySelector('html'), ':before').content\n    const navOpenBtn = document.querySelector('.idle-nav1-container .btn-open')\n    const menu = document.querySelector('.idle-nav1')\n    console.log(breakpoint)\n\n    if (breakpoint == '\"small\"' || breakpoint == '\"medium\"') {\n      const expanded = navOpenBtn.getAttribute('aria-expanded')\n      if (expanded === null) {\n        navOpenBtn.setAttribute('aria-expanded', 'false')\n      }\n      navOpenBtn.removeAttribute('hidden')\n      navOpenBtn.addEventListener('click', toggleNav, false)\n      menu.setAttribute('hidden', 'hidden')\n    } else {\n      navOpenBtn.removeAttribute('aria-expanded')\n      navOpenBtn.removeEventListener('click', toggleNav, false)\n      navOpenBtn.setAttribute('hidden', 'hidden')\n      menu.removeAttribute('hidden')\n    }\n  }\n\n  function initPage() {\n    const navOpenBtn = document.querySelector('.idle-nav1-container .btn-open')\n    const navMenu = document.querySelector('.idle-nav1')\n    console.log('initPage fired')\n    // Initialize responsive navigation on window resize\n    window.addEventListener('resize', resizeThrottler, false)\n\n    document.querySelector('html').classList.add('js')\n    document.querySelector('html').classList.remove('no-js')\n\n    initResponsiveNav()\n  }\n\n\n  // Adapted from MDN https://developer.mozilla.org/en-US/docs/Web/Events/resize\n  let resizeTimeout = false;\n  function resizeThrottler(e) {\n    // ignore resize events as long as an initResponsiveNav execution is in the queue\n    if ( !resizeTimeout ) {\n      resizeTimeout = setTimeout( () => {\n        resizeTimeout = null\n        initResponsiveNav()\n        // initResponsiveNav will execute at a rate of 15hz\n       }, 66)\n    }\n  }\n\n  function toggleNav(e) {\n    const navOpenBtn = e.target\n    const btnExpanded = navOpenBtn.getAttribute('aria-expanded')\n    if ( btnExpanded === 'true' ) {\n      console.log('true')\n      closeNav(e)\n    } else if (btnExpanded === 'false') {\n      console.log('false')\n      openNav(e)\n    } else {\n      console.log('Neither true nor false')\n    }\n  }\n\n  function openNav(e) {\n    const navOpenBtn = e.target\n    const navMenu = e.target.parentElement.querySelector('.idle-nav1')\n    navMenu.removeAttribute('hidden')\n    e.stopPropagation()\n    document.addEventListener('click', closeNav, false)\n    window.setTimeout( () => {\n      navOpenBtn.setAttribute('aria-expanded', 'true')\n    }, 10)\n  }\n\n  function closeNav(e) {\n    console.log('closeNav() fired')\n    console.log(e.target)\n\n    const navOpenBtn = document.querySelector('.idle-nav1-container .btn-open')\n    const navMenu = document.querySelector('.idle-nav1')\n    navOpenBtn.setAttribute('aria-expanded', 'false')\n    document.removeEventListener('click', closeNav, false)\n    window.setTimeout( () => {navMenu.setAttribute('hidden', 'hidden')}, 500)\n  }\n\n  // Initialize responsive navigation after HTML has loaded\n  //document.addEventListener('DOMContentLoaded', initPage, false);\n  if (document.readyState == 'interactive') {\n    console.log('Doc already ready')\n    return initPage()\n  } else {\n    console.log('Doc wasnâ€™t ready')\n    document.addEventListener('DOMContentLoaded', initPage, true)\n  }\n})();\n","(() => {\n  'use strict';\n\n  function initLaunchers() {\n    // This function is called first, to initialize\n    // the click listeners on the menu launchers.\n    const dropdowns = document.querySelectorAll('.dropdown');\n    for(let i = 0; i < dropdowns.length; i++) {\n      let launcher = dropdowns[i].querySelector('.dropdown-launcher');\n      let menu = dropdowns[i].querySelector('.dropdown-menu');\n\n      launcher.addEventListener('click', launchDropdown);\n      menu.setAttribute('hidden', 'hidden');\n    }\n  }\n\n  function launchDropdown(e) {\n    let launcher = e.target;\n    let container = launcher.parentElement;\n    let menu = container.querySelector('.dropdown-menu');\n\n    launcher.blur();\n    closeDropdowns();\n    menu.removeAttribute('hidden');\n    window.setTimeout( () => { launcher.setAttribute('aria-expanded', 'true');}, 50);\n    document.addEventListener('click', closeDropdowns);\n    e.stopPropagation();\n    e.preventDefault();\n    menu.focus();\n  }\n\n  function closeDropdowns() {\n    // Select these elements at runtime instead of at startup,\n    // so we can select new menus as they are added to the DOM.\n    let openLaunchers = document.querySelectorAll('.dropdown-launcher[aria-expanded=\"true\"]');\n    let openMenus = document.querySelectorAll('.dropdown-launcher[aria-expanded=\"true\"] + .dropdown-menu');\n\n    for(let i = 0; i < openLaunchers.length; i++) {\n      openLaunchers[i].parentElement.focus();\n      openLaunchers[i].setAttribute('aria-expanded', 'false');\n      hideMenu(openMenus[i]);\n    }\n    document.removeEventListener('click', closeDropdowns);\n  }\n\n  function hideMenu(thisMenu) {\n    // This is defined as a specific function, so it can be called\n    // multiple times, and multiple instances could run independently\n    // of the timeout.\n    setTimeout( () => {thisMenu.setAttribute('hidden', 'hidden')}, 300 );\n  }\n\n  document.addEventListener('DOMContentLoaded', initLaunchers());\n})();\n"]}